spring.redis.sentinel.master =
spring.redis.sentinel.nodes =
# Redis数据库索引（默认为0）
spring.redis.database = 1
# 连接超时时间（毫秒）
spring.redis.timeout = 3000
# Redis服务器连接密码（默认为空）
spring.redis.password =
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active = 100
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait = -1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle = 100
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle = 0
spring.redis.ssl = false
#springbootadmin配置
spring.boot.admin.client.url =
###producer
#该应用是否启用生产者
rocketmq.producer.isOnOff = on
#发送同一类消息的设置为同一个group，保证唯一,默认不需要设置，rocketmq会使用ip@pid(pid代表jvm名字)作为唯一标示
rocketmq.producer.groupName = ${spring.application.name}
#mq的nameserver地址
rocketmq.producer.namesrvAddr =
#消息最大长度 默认1024*4(4M)
rocketmq.producer.maxMessageSize = 35536
#发送消息超时时间,默认3000
rocketmq.producer.sendMsgTimeout = 3000
#发送消息失败重试次数，默认2
rocketmq.producer.retryTimesWhenSendFailed = 2
###consumer
##该应用是否启用消费者
rocketmq.consumer.isOnOff = on
rocketmq.consumer.groupName = ${spring.application.name}
#mq的nameserver地址
rocketmq.consumer.namesrvAddr =
#该消费者订阅的主题和tags("*"号表示订阅该主题下所有的tags),格式：topic~tag1||tag2||tag3;topic2~*;
rocketmq.consumer.topics = DemoTopic~*;
rocketmq.consumer.consumeThreadMin = 4
rocketmq.consumer.consumeThreadMax = 20
#设置一次消费消息的条数，默认为1条
rocketmq.consumer.consumeMessageBatchMaxSize = 1
#ES配置
es.cluster.address =
es.max.connect.num = 30
es.connect.per.route = 5
#数据库连接
spring.datasource.url =
spring.datasource.username =
spring.datasource.password =
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.tomcat.max-wait = 10000
spring.datasource.max-active = 20
spring.datasource.max-idle = 8
spring.datasource.min-idle = 8
spring.datasource.initial-size = 10

dic.upload.path =